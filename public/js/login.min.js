/*! wembli-website 2014-08-04 */
"use strict";

angular.module("wembliApp", [ "ngRoute", "ngAnimate", "mgcrea.ngStrap", "wembliApp.controllers", "wembliApp.controllers.login", "wembliApp.controllers.header", "wembliApp.filters", "wembliApp.services", "wembliApp.services.header", "wembliApp.services.facebook", "wembliApp.services.twitter", "wembliApp.services.pixel", "wembliApp.directives", "wembliApp.directives.header" ]).config([ "$routeProvider", "$locationProvider", function() {} ]).run([ "$timeout", "initRootScope", "$rootScope", "$location", "$route", "$window", "facebook", "twitter", "plan", "wembliRpc", function($timeout, initRootScope, $scope, $location, $route, $window, facebook, twitter, plan) {
    console.log("run login angular app"), $timeout(function() {
        plan.fetch(function() {});
    }), $window.fbAsyncInit = function() {
        facebook.getLoginStatus(), $scope.facebook = facebook;
    }, twitter.getLoginStatus();
} ]), angular.module("wembliApp.controllers.login", []).controller("RsvpLoginCtrl", [ "$scope", "plan", "customer", "wembliRpc", "pixel", "googleAnalytics", "$window", function($scope, plan, customer, wembliRpc, pixel, googleAnalytics, $window) {
    $scope.listId = "a55323395c", $scope.$watch("service", function(n) {
        "undefined" !== n && (console.log(n), "wemblimail" === n ? wembliRpc.fetch("friend.getServiceId", {
            token: $scope.token
        }, function(err, result) {
            result.serviceId && ($scope.email = result.serviceId);
        }) : ($scope.customer && "twitter" === n || "facebook" === n) && ($scope.confirmSocial = n, 
        console.log("confirmSocial: " + $scope.confirmSocial)));
    }), $scope.$watch("guid", function() {
        $scope.next = "/rsvp/" + $scope.guid + "/" + $scope.token + "/" + $scope.service, 
        console.log("next: " + $scope.next);
    }), $scope.confirm = function(social) {
        return "undefined" == typeof social ? $scope.customer && "twitter" !== $scope.service && "facebook" !== $scope.service ? !0 : !1 : social === $scope.service ? !0 : !1;
    }, $scope.$on("forgot-password-email-sent", function(e, err) {
        err ? $scope.forgotPasswordEmailError = !0 : ($scope.forgotPasswordEmailError = !1, 
        $scope.forgotPasswordEmailSent = !0);
    }), $scope.showSignupForm = !0, $scope.inProgress = !1, $scope.showForm = function(show, hide) {
        $scope[show] = !0, $scope[hide] = !1;
    }, $scope.submitSignup = function() {
        if ($scope.forgotPasswordEmailError = !1, $scope.forgotPasswordEmailSent = !1, $scope.signup.$valid) {
            $scope.inProgress = !0;
            var rpcArgs = {
                firstName: $scope.firstName,
                lastName: $scope.lastName,
                email: $scope.email,
                next: $scope.next,
                listId: $scope.listId
            };
            wembliRpc.fetch("customer.signup", rpcArgs, function(err, result) {
                if (console.log("back from customer signup"), console.log(result), result.exists && !result.noPassword) return console.log("account exists and has password"), 
                $scope.login.accountExists = !0, $scope.showForm("showLoginForm", "showSignupForm");
                if (result.noPassword) return console.log("no password"), $scope.showForm("showLoginUnconfirmedForm", "showSignupForm");
                if (result.formError) return void ($scope.signup.formError = !0);
                $scope.customer = customer.get();
                var confirmSocialMap = {
                    facebook: !0,
                    twitter: !0
                };
                "undefined" != typeof confirmSocialMap[$scope.service] && confirmSocialMap[$scope.service] && ($scope.confirmSocial = $scope.service), 
                $scope.signup.success = !0, console.log("submit signup succes - fire pixel");
                var gCookie = googleAnalytics.getCookie();
                return pixel.fire({
                    type: "signup",
                    campaign: gCookie.__utmz.utmccn,
                    source: "google",
                    medium: gCookie.__utmz.utmcmd,
                    term: gCookie.__utmz.utmctr,
                    content: "1070734106"
                }), pixel.fire({
                    type: "signup",
                    campaign: "Signup Conversion Pixel Facebook Ad",
                    source: "facebook",
                    medium: "cpc",
                    term: "",
                    content: "6013588786171"
                }), $scope.confirmSocial ? void 0 : (console.log("navigate to: " + $scope.next), 
                $window.location.href = $scope.next);
            });
        }
    }, $scope.submitLogin = function() {
        if ($scope.forgotPasswordEmailError = !1, $scope.forgotPasswordEmailSent = !1, $scope.login.$valid) {
            var rpcArgs = {
                email: $scope.email,
                password: $scope.password
            };
            wembliRpc.fetch("customer.login", rpcArgs, function(err, result) {
                return result.noPassword ? $scope.showForm("showLoginUnconfirmedForm", "showLoginForm") : result.invalidCredentials ? void ($scope.login.invalidCredentials = !0) : ($scope.login.success = !0, 
                $window.location.href = $scope.next);
            });
        }
    };
} ]).controller("SupplyPasswordCtrl", [ "$scope", "wembliRpc", "$window", function($scope, wembliRpc, $window) {
    $scope.confirmPasswordForm = {}, $scope.confirmPasswordForm.passwordMismatch = !1, 
    $scope.confirmPasswordForm.fatalError = !1, $scope.confirmPasswordInProgress = !1, 
    $scope.email = $("#email").val(), $scope.token = $("#token").val(), $scope.redirectUrl = $("#redirectUrl").val(), 
    console.log("redirecturl: " + $scope.redirectUrl), $scope.submitConfirmPasswordForm = function() {
        $scope.confirmPasswordForm.$invalid || ($scope.confirmPasswordInProgress = !0, console.log($scope.email), 
        wembliRpc.fetch("customer.resetPassword", {
            email: $scope.email,
            token: $scope.token,
            password: $scope.password,
            password2: $scope.password2
        }, function(err, results) {
            return console.log(err), console.log(results), err ? (console.log("fatal err"), 
            $scope.confirmPasswordForm.fatalError = err, void ($scope.confirmPasswordInProgress = !1)) : void (results.passwordMismatch ? ($scope.confirmPasswordForm.passwordMismatch = results.passwordMismatch, 
            $scope.confirmPasswordInProgress = !1) : ($scope.confirmPasswordInProgress = !1, 
            console.log("supplied password - redirect to: " + $scope.redirectUrl), $window.location.href = $scope.redirectUrl ? $scope.redirectUrl : "/dashboard"));
        }));
    };
} ]).controller("SignupCtrl", [ "$scope", "$window", "wembliRpc", "pixel", "googleAnalytics", function($scope, $window, wembliRpc, pixel, googleAnalytics) {
    $scope.signupForm = {}, $scope.signupForm.exists = !1, $scope.signupForm.fatalError = !1, 
    $scope.signupInProgress = !1, $scope.submitSignupForm = function() {
        $scope.signupForm.$invalid || ($scope.signupInProgress = !0, wembliRpc.fetch("customer.signup", {
            firstName: $scope.firstName,
            lastName: $scope.lastName,
            email: $scope.email
        }, function(err, results) {
            if (err) return console.log("fatal err"), $scope.signupForm.fatalError = err, void ($scope.signupInProgress = !1);
            if (results.exists) $scope.signupForm.exists = results.exists, $scope.signupInProgress = !1; else {
                var gCookie = googleAnalytics.getCookie();
                pixel.fire({
                    type: "signup",
                    campaign: gCookie.__utmz.utmccn,
                    source: "google",
                    medium: gCookie.__utmz.utmcmd,
                    term: gCookie.__utmz.utmctr,
                    content: "1070734106"
                }), pixel.fire({
                    type: "signup",
                    campaign: "Signup Conversion Pixel Facebook Ad",
                    source: "facebook",
                    medium: "cpc",
                    term: "",
                    content: "6013588786171"
                }), $scope.signupInProgress = !1, $window.location.href = $scope.redirectUrl ? $scope.redirectUrl : "/dashboard";
            }
        }));
    };
} ]).controller("LoginCtrl", [ "$scope", "$window", "wembliRpc", function($scope, $window, wembliRpc) {
    $scope.loginForm = {}, $scope.loginForm.invalidCredentials = !1, $scope.forgotPasswordForm = {}, 
    $scope.forgotPasswordForm.noCustomer = !1, $scope.forgotPasswordForm.success = !1, 
    $scope.forgotPasswordInProgress = !1, $scope.loginInProgress = !1, $scope.rememberEmail && ($scope.loginForm.email = $scope.rememberEmail, 
    $scope.loginForm.remember = !0), $scope.submitLoginForm = function() {
        return $scope.loginForm.$invalid ? void console.log("login form is not valid") : ($scope.loginInProgress = !0, 
        $scope.loginForm.remember, void wembliRpc.fetch("customer.login", {
            email: $scope.email,
            password: $scope.password
        }, function(err, results) {
            return $scope.loginInProgress = !1, err ? (console.log("fatal err"), void ($scope.loginForm.fatalError = err)) : void (results.error ? $scope.loginForm.invalidCredentials = !0 : $window.location.href = $scope.redirectUrl ? $scope.redirectUrl : "/dashboard");
        }));
    }, $scope.submitForgotPasswordForm = function() {
        $scope.forgotPasswordForm.$invalid || ($scope.forgotPasswordInProgress = !0, wembliRpc.fetch("customer.sendForgotPasswordEmail", {
            email: $scope.email
        }, function(err, results) {
            return $scope.forgotPasswordInProgress = !1, err ? void ($scope.forgotPasswordForm.fatalError = err) : void (results.error ? $scope.forgotPasswordForm.noCustomer = !0 : $scope.forgotPasswordForm.success = !0);
        }));
    };
} ]);